apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ingress-nginx
  namespace: argocd
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/component: ingress
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://kubernetes.github.io/ingress-nginx
    chart: ingress-nginx
    targetRevision: 4.8.3
    helm:
      releaseName: ingress-nginx
      values: |
        controller:
          name: controller
          image:
            repository: registry.k8s.io/ingress-nginx/controller
            tag: "v1.9.4"
            digest: ""
          
          replicaCount: 2
          
          service:
            enabled: true
            type: LoadBalancer
            annotations:
              service.beta.kubernetes.io/aws-load-balancer-type: nlb
              service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
              service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
              service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "60"
              service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: "*"
            externalTrafficPolicy: Local
          
          config:
            enable-real-ip: "true"
            proxy-real-ip-cidr: "0.0.0.0/0"
            proxy-body-size: "20m"
            client-body-buffer-size: "16k"
            client-body-timeout: "60"
            client-header-timeout: "60"
            keepalive-timeout: "60"
            proxy-connect-timeout: "15"
            proxy-send-timeout: "60"
            proxy-read-timeout: "60"
            server-name-hash-bucket-size: "256"
            ssl-protocols: "TLSv1.2 TLSv1.3"
            ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384"
            use-forwarded-headers: "true"
            compute-full-forwarded-for: "true"
            use-proxy-protocol: "true"
          
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 200Mi
          
          nodeSelector:
            kubernetes.io/arch: amd64
          
          tolerations:
            - key: CriticalAddonsOnly
              operator: Exists
          
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                      - ingress-nginx
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                      - controller
                  topologyKey: kubernetes.io/hostname
          
          metrics:
            enabled: true
            serviceMonitor:
              enabled: true
              namespace: ingress-nginx
              namespaceSelector: {}
          
          podDisruptionBudget:
            enabled: true
            maxUnavailable: 1
          
          autoscaling:
            enabled: true
            minReplicas: 2
            maxReplicas: 10
            targetCPUUtilizationPercentage: 80
            targetMemoryUtilizationPercentage: 80
        
        defaultBackend:
          enabled: true
          name: defaultbackend
          image:
            repository: registry.k8s.io/defaultbackend-amd64
            tag: "1.5"
          
          replicaCount: 1
          
          resources:
            limits:
              cpu: 10m
              memory: 20Mi
            requests:
              cpu: 10m
              memory: 20Mi
        
        rbac:
          create: true
        
        serviceAccount:
          create: true
          name: ingress-nginx
  destination:
    server: https://kubernetes.default.svc
    namespace: ingress-nginx
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    retry:
      limit: 3
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m 